syntax = "proto3";
import "github.com/gogo/protobuf/gogoproto/gogo.proto";

package pb;

// AuthService ----------------------------------------------------------------

service AuthSvc {
    rpc SignIn(SignInRequest) returns (SignInResponse) {}
    rpc SignUp(SignUpRequest) returns (SignInResponse) {}
}

message SignInRequest {
    string Email = 1 [(gogoproto.jsontag) = "email"];
    string Password = 2 [(gogoproto.jsontag) = "password"];
}

message SignInResponse {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    bool IsAdmin = 2 [(gogoproto.jsontag) = "is_admin"];
}

message SignUpRequest {
    string Email = 1 [(gogoproto.jsontag) = "email"];
    string UserID = 2 [(gogoproto.jsontag) = "user_id"];
    string Password = 3 [(gogoproto.jsontag) = "password"];
}

// UserService ----------------------------------------------------------------

service UserSvc {
    rpc CreateUser(CreateUserRequest) returns (User) {}
    rpc GetUser(GetUserRequest) returns (User) {}
    rpc GetFollowers(GetFollowersRequest) returns (GetFollowersResponse) {}
    rpc GetFollowing(GetFollowingRequest) returns (GetFollowingResponse) {}
    rpc CreateFollow(FollowRequest) returns (FollowResponse) {}
    rpc RemoveFollow(FollowRequest) returns (FollowResponse) {}
}

message User {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    uint32 FollowerCount = 2 [(gogoproto.jsontag) = "follower_count"];
    uint32 FollowingCount = 3 [(gogoproto.jsontag) = "following_count"];
    string FileID = 4 [(gogoproto.jsontag) = "file_id"];
    string Name = 5 [(gogoproto.jsontag) = "name"];
    string Description = 6 [(gogoproto.jsontag) = "description"];
    string Username = 7 [(gogoproto.jsontag) = "username"];
}

message CreateUserRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    string Username = 2 [(gogoproto.jsontag) = "username"];
    string Email = 3 [(gogoproto.jsontag) = "email"];
}

message GetUserRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
}

message GetFollowersRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message GetFollowersResponse {
    repeated User Followers = 1 [(gogoproto.jsontag) = "followers"];
}

message GetFollowingRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message GetFollowingResponse {
    repeated User Following = 1 [(gogoproto.jsontag) = "following"];
}

message FollowRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    string FollowID = 2 [(gogoproto.jsontag) = "follow_id"];
}

message FollowResponse {
    User User = 1 [(gogoproto.jsontag) = "user"];
    User FollowingUser = 2 [(gogoproto.jsontag) = "following_user"];
}

// PostService ----------------------------------------------------------------

service PostSvc {
    rpc CreatePost(CreatePostRequest) returns (Post) {}
    rpc CreatePostLike(CreatePostLikeRequest) returns (Post) {}
    rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {}
    rpc CreateCommentLike(CreateCommentLikeRequest) returns (Post) {}
    rpc GetPost(GetPostRequest) returns (Post) {}
    rpc GetProfile(GetPostsRequest) returns (GetPostsResponse) {}
    rpc GetFeed(GetPostsRequest) returns (GetPostsResponse) {}
    rpc GetPostLikes(GetPostLikesRequest) returns (LikesResponse) {}
    rpc GetPostComments(GetPostCommentsRequest) returns (CommentsResponse) {}
    rpc GetCommentLikes(GetCommentLikesRequest) returns (LikesResponse) {}
    rpc GetComment(GetCommentRequest) returns (Comment) {}
}

message Post {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
    string FileID = 2 [(gogoproto.jsontag) = "file_id"];
    uint32 LikeCount = 3 [(gogoproto.jsontag) = "like_count"];
    repeated Comment TopComments = 4 [(gogoproto.jsontag) = "top_comments"];
    uint32 CommentCount = 5 [(gogoproto.jsontag) = "comment_count"];
    string UserID = 6 [(gogoproto.jsontag) = "user_id"];
    string Caption = 7 [(gogoproto.jsontag) = "caption"];
    fixed32 CreatedAtSeconds = 8 [(gogoproto.jsontag) = "created_at_seconds"];
}

message Comment {
    string CommentID = 1 [(gogoproto.jsontag) = "comment_id"];
    string UserID = 2 [(gogoproto.jsontag) = "user_id"];
    string PostID = 3 [(gogoproto.jsontag) = "post_id"];
    string Text = 4 [(gogoproto.jsontag) = "text"];
    uint32 LikeCount = 5 [(gogoproto.jsontag) = "like_count"];
    fixed32 CreatedAtSeconds = 6 [(gogoproto.jsontag) = "created_at_seconds"];
}

message Like {
    string LikeID = 1 [(gogoproto.jsontag) = "like_id"];
    string UserID = 2 [(gogoproto.jsontag) = "user_id"];
    string PostID = 3 [(gogoproto.jsontag) = "post_id"];
    fixed32 CreatedAtSeconds = 4 [(gogoproto.jsontag) = "created_at_seconds"];
}

message CreatePostRequest {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
    string FileID = 2 [(gogoproto.jsontag) = "file_id"];
    string UserID = 3 [(gogoproto.jsontag) = "user_id"];
    string caption = 4;
}


message CreatePostLikeRequest {
    string LikeID = 1 [(gogoproto.jsontag) = "like_id"];
    string UserID = 2 [(gogoproto.jsontag) = "user_id"];
    string PostID = 3 [(gogoproto.jsontag) = "post_id"];
}

message CreateCommentLikeRequest {
    string LikeID = 1 [(gogoproto.jsontag) = "like_id"];
    string UserID = 2 [(gogoproto.jsontag) = "user_id"];
    string CommentID = 3 [(gogoproto.jsontag) = "comment_id"];
}

message CreateCommentRequest {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
    string CommentID = 2 [(gogoproto.jsontag) = "comment_id"];
    string UserID = 3 [(gogoproto.jsontag) = "user_id"];
    string Text = 4 [(gogoproto.jsontag) = "text"];
}

message CreateCommentResponse {
    Post Post = 1 [(gogoproto.jsontag) = "post"];
    Comment Comment = 2 [(gogoproto.jsontag) = "comment"];
}

message GetPostRequest {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
}

message GetPostsRequest {
    string UserID = 1 [(gogoproto.jsontag) = "user_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message GetPostsResponse {
    repeated Post Posts = 1 [(gogoproto.jsontag) = "posts"];
    uint32 NextPage = 2 [(gogoproto.jsontag) = "next_page"];
}

message GetCommentRequest {
    string CommentID = 1 [(gogoproto.jsontag) = "comment_id"];
}

message GetPostCommentsRequest {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message CommentsResponse {
    repeated Comment Comments = 1 [(gogoproto.jsontag) = "comments"];
    uint32 NextPage = 2 [(gogoproto.jsontag) = "next_page"];
}

message GetPostLikesRequest {
    string PostID = 1 [(gogoproto.jsontag) = "post_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message GetCommentLikesRequest {
    string CommentID = 1 [(gogoproto.jsontag) = "comment_id"];
    uint32 Page = 2 [(gogoproto.jsontag) = "page"];
}

message LikesResponse {
    repeated Like Likes = 1 [(gogoproto.jsontag) = "likes"];
    uint32 NextPage = 2 [(gogoproto.jsontag) = "next_page"];
}

// FileService ----------------------------------------------------------------

service FileSvc {
    rpc Upload(stream FilePart) returns (UploadStatus) {}
}

message FilePart {
    bytes Content = 1 [(gogoproto.jsontag) = "content"];
}

enum UploadStatusCode {
    Unknown = 0;
    Ok = 1;
    Failed = 2;
}

message UploadStatus {
    string FileID = 1 [(gogoproto.jsontag) = "file_id"];
    UploadStatusCode Status = 2 [(gogoproto.jsontag) = "status"];
}