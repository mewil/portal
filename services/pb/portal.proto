syntax = "proto3";

package pb;

// AuthService ----------------------------------------------------------------

service AuthSvc {
    rpc SignIn(SignInRequest) returns (SignInResponse) {}
    rpc SignUp(SignUpRequest) returns (SignInResponse) {}
}

message SignInRequest {
    string email = 1;
    string password = 2;
}

message SignInResponse {
    string user_id = 1;
    bool is_admin = 3;
}

message SignUpRequest {
    string email = 1;
    string user_id = 2;
    string password = 3;
}

// UserService ----------------------------------------------------------------

service UserSvc {
    rpc CreateUser(CreateUserRequest) returns (User) {}
    rpc GetUser(GetUserRequest) returns (User) {}
    rpc GetFollowers(GetFollowersRequest) returns (GetFollowersResponse) {}
    rpc GetFollowing(GetFollowingRequest) returns (GetFollowingResponse) {}
    rpc CreateFollow(FollowRequest) returns (FollowResponse) {}
    rpc RemoveFollow(FollowRequest) returns (FollowResponse) {}
}

message User {
    string user_id = 1;
    uint32 follower_count = 2;
    uint32 following_count = 3;
    string file_id = 4;
    string name = 5;
    string description = 6;
    string username = 7;
    uint32 post_count = 8;
    fixed32 created_at_seconds = 9;
    string email = 10;
}

message CreateUserRequest {
    string user_id = 1;
    string username = 2;
    string email = 3;
    string name = 4;
}

message GetUserRequest {
    string user_id = 1;
}

message GetFollowersRequest {
    string user_id = 1;
    uint32 page = 2;
}

message GetFollowersResponse {
    repeated User followers = 1;
}

message GetFollowingRequest {
    string user_id = 1;
    uint32 page = 2;
}

message GetFollowingResponse {
    repeated User following = 1;
}

message FollowRequest {
    string user_id = 1;
    string follow_id = 2;
}

message FollowResponse {
    User user = 1;
    User following_user = 2;
}

// PostService ----------------------------------------------------------------

service PostSvc {
    rpc CreatePost(CreatePostRequest) returns (Post) {}
    rpc CreatePostLike(CreatePostLikeRequest) returns (Post) {}
    rpc CreateComment(CreateCommentRequest) returns (CreateCommentResponse) {}
    rpc CreateCommentLike(CreateCommentLikeRequest) returns (Post) {}
    rpc GetPost(GetPostRequest) returns (Post) {}
    rpc GetProfile(GetPostsRequest) returns (GetPostsResponse) {}
    rpc GetFeed(GetPostsRequest) returns (GetPostsResponse) {}
    rpc GetPostLikes(GetPostLikesRequest) returns (LikesResponse) {}
    rpc GetPostComments(GetPostCommentsRequest) returns (CommentsResponse) {}
    rpc GetCommentLikes(GetCommentLikesRequest) returns (LikesResponse) {}
    rpc GetComment(GetCommentRequest) returns (Comment) {}
}

message Post {
    string post_id = 1;
    string file_id = 2;
    uint32 like_count = 3;
    repeated Comment top_comments = 4;
    uint32 comment_count = 5;
    string user_id = 6;
    string caption = 7;
    fixed32 created_at_seconds = 8;
}

message Comment {
    string comment_id = 1;
    string user_id = 2;
    string post_id = 3;
    string description = 4;
    uint32 like_count = 5;
    fixed32 created_at_seconds = 6;
}

message Like {
    string like_id = 1;
    string user_id = 2;
    string post_id = 3;
    fixed32 created_at_seconds = 4;
}

message CreatePostRequest {
    string post_id = 1;
    string file_id = 2;
    string user_id = 3;
    string caption = 4;
}


message CreatePostLikeRequest {
    string like_id = 1;
    string user_id = 2;
    string post_id = 3;
}

message CreateCommentLikeRequest {
    string like_id = 1;
    string user_id = 2;
    string comment_id = 3;
}

message CreateCommentRequest {
    string post_id = 1;
    string comment_id = 2;
    string user_id = 3;
    string text = 4;
}

message CreateCommentResponse {
    Post post = 1;
    Comment comment = 2;
}

message GetPostRequest {
    string post_id = 1;
}

message GetPostsRequest {
    string user_id = 1;
    uint32 page = 2;
}

message GetPostsResponse {
    repeated Post posts = 1;
    uint32 next_page = 2;
}

message GetCommentRequest {
    string comment_id = 1;
}

message GetPostCommentsRequest {
    string post_id = 1;
    uint32 page = 2;
}

message CommentsResponse {
    repeated Comment comments = 1;
    uint32 next_page = 2;
}

message GetPostLikesRequest {
    string post_id = 1;
    uint32 page = 2;
}

message GetCommentLikesRequest {
    string comment_id = 1;
    uint32 page = 2;
}

message LikesResponse {
    repeated Like likes = 1;
    uint32 next_page = 2;
}

// FileService ----------------------------------------------------------------

service FileSvc {
    rpc Upload(stream FilePart) returns (UploadStatus) {}
}

message FilePart {
    bytes content = 1;
}

enum UploadStatusCode {
    Unknown = 0;
    Ok = 1;
    Failed = 2;
}

message UploadStatus {
    string file_id = 1;
    UploadStatusCode status = 2;
}